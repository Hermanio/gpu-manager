#!/usr/bin/env python3

# Copyright (C) 2018 Herman Ã•unapuu
#
# This file is part of Linux GPU Manager.
#
# Linux GPU Manager is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Linux GPU Manager is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Linux GPU Manager.  If not, see <http://www.gnu.org/licenses/>.


import argparse
import sys
import dbus.exceptions


class MyParser(argparse.ArgumentParser):
    def error(self, message):
        sys.stderr.write('error: %s\n' % message)
        self.print_help()
        sys.exit(2)


if __name__ == "__main__":
    CONTROLLER_MODES = ['powersave', 'normal', 'performance']

    try:
        bus = dbus.SystemBus()
        gpu_manager = bus.get_object("ee.ounapuu.GPUManager", "/ee/ounapuu/GPUManager")
    except dbus.exceptions.DBusException as e:
        print("Failed to initialize D-Bus object: '%s'" % str(e))
        sys.exit(2)

    parser = MyParser(argparse.ArgumentParser())
    parser.add_argument("mode",
                        help="Starts the GPU Manager Service in a given mode. Available modes: powersave, normal, performance",
                        type=str, nargs='?', default='normal')
    args = parser.parse_args()
    if args.mode in CONTROLLER_MODES:
        gpu_manager.set_mode(args.mode)
    else:
        # print("Invalid argument ", args.action)
        parser.error("Invalid argument " + str(args.action))
